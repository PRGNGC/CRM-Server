------------------------------------------------------------------------------------------------
установить линтеры с yarn

структура записи - скрипт для установки пакета | скрипт для создания файла
prettier - yarn add -D prettier | node --eval "fs.writeFileSync('.prettierrc','{}\n')" | node --eval "fs.writeFileSync('.prettierignore','{}\n')"
eslint - yarn add -D eslint eslint-plugin-react-hooks eslint-plugin-react-refresh @typescript-eslint/parser eslint-config-airbnb eslint-config-next eslint-config-prettier eslint-plugin-prettier eslint-plugin-react @typescript-eslint/eslint-plugin @eslint/js globals typescript typescript-eslint | node --eval "fs.writeFileSync('eslint.config.js','{}\n')"
stylelint - yarn add -D stylelint stylelint-config-standard stylelint-config-standard-scss | node --eval "fs.writeFileSync('.stylelint.json','{}\n')" | node --eval "fs.writeFileSync('.stylelintignore','{}\n')"
editorconfig - _ | node --eval "fs.writeFileSync('.editorconfig','{}\n')"
husky - yarn add -D husky | echo "yarn lint-staged --concurrent false" > .husky/pre-commit
lint-staged - yarn add -D lint-staged | node --eval "fs.writeFileSync('.lintstagedrc','{}\n')"
commitlint - yarn add -D @commitlint/config-conventional @commitlint/cli | node --eval "fs.writeFileSync('commitlint.config.js','{}\n')" | echo "npx --no -- commitlint --edit" > .husky/commit-msg
общий скрипт frontend - yarn add -D prettier eslint eslint-plugin-react-hooks eslint-plugin-react-refresh @typescript-eslint/parser eslint-config-airbnb eslint-config-next eslint-config-prettier eslint-plugin-prettier eslint-plugin-react @typescript-eslint/eslint-plugin @eslint/js globals typescript typescript-eslint stylelint stylelint-config-standard stylelint-config-standard-scss husky lint-staged @commitlint/config-conventional @commitlint/cli
общий скрипт backend - yarn add -D prettier husky lint-staged @commitlint/config-conventional @commitlint/cli

------------------------------------------------------------------------------------------------

установить линтеры с npm
структура записи - скрипт для установки пакета | скрипт для создания файла
prettier - npm install -D prettier | node --eval "fs.writeFileSync('.prettierrc','{}\n')" | node --eval "fs.writeFileSync('.prettierignore','{}\n')"
eslint - npm install -D eslint eslint-plugin-react-hooks eslint-plugin-react-refresh @typescript-eslint/parser eslint-config-airbnb eslint-config-next eslint-config-prettier eslint-plugin-prettier eslint-plugin-react @typescript-eslint/eslint-plugin @eslint/js globals typescript typescript-eslint | node --eval "fs.writeFileSync('eslint.config.js','{}\n')"
stylelint - npm install -D stylelint stylelint-config-standard stylelint-config-standard-scss | node --eval "fs.writeFileSync('.stylelint.json','{}\n')"
editorconfig - _ | node --eval "fs.writeFileSync('.editorconfig','{}\n')"
husky - npm install -D husky | echo "npm lint-staged --concurrent false" > .husky/pre-commit
lint-staged - npm install -D lint-staged | node --eval "fs.writeFileSync('.lintstagedrc','{}\n')"
commitlint - npm install -D @commitlint/config-conventional @commitlint/cli | node --eval "fs.writeFileSync('commitlint.config.js','{}\n')" | echo "npx --no -- commitlint --edit" > .husky/commit-msg
общий скрипт frontend - npm install -D prettier eslint eslint-plugin-react-hooks eslint-plugin-react-refresh @typescript-eslint/parser eslint-config-airbnb eslint-config-next eslint-config-prettier eslint-plugin-prettier eslint-plugin-react @typescript-eslint/eslint-plugin @eslint/js globals typescript typescript-eslint stylelint stylelint-config-standard stylelint-config-standard-scss husky lint-staged @commitlint/config-conventional @commitlint/cli
общий скрипт backend - npm install -D prettier husky lint-staged @commitlint/config-conventional @commitlint/cli

------------------------------------------------------------------------------------------------

создать package.json
npm init

------------------------------------------------------------------------------------------------

создать папку node_modules
npm i

------------------------------------------------------------------------------------------------

все линтеры и относящиеся к линтерам
prettier - линтер
eslint - линтер
stylelint - линтер
editorconfig - линтер
husky - чекер линтинга
lint-staged - чекер линтинга
commitlint - чекер git commit команды (git commit ==> git cz)
commitizen - определяет структуру команды git cz
conventional commit - конвенция по созданию commit'ов

------------------------------------------------------------------------------------------------

для работы eslint добавить в файл package.json
"overrides": {
	"eslint": "9.3.0"
}

------------------------------------------------------------------------------------------------

для работы commitizen добавить в файл package.json
"config": {
	"commitizen": {
		"path": "cz-conventional-changelog"
	}
}

------------------------------------------------------------------------------------------------

добавить npm-scripts для работы линтинга
"prettier": "npx prettier src/**/*.{js,jsx,ts,tsx} --check",
"prettier:write": "npx prettier src/**/*.{js,jsx,ts,tsx} --write",
"lint": "npx eslint src/**/*.{js,jsx,ts,tsx}",
"lint:fix": "npx eslint src/**/*.{js,jsx,ts,tsx} --fix",
"stylelint": "npx stylelint src/**/*.{css,scss}",
"stylelint:fix": "npx stylelint src/**/*.{css,scss} --fix",
"lint-staged": "npx lint-staged --concurrent false",
"prepare": "husky install"

------------------------------------------------------------------------------------------------


Псоледовательность:
1. - npm i
2. - npm init
3. - добавить в файл package.json записи *1 и *2
4. - запустить общий скрипт
5. - создать нужные файлы (с помощью template)
6. - добавить npm-scripts в файл package.json

------------------------------------------------------------------------------------------------

Создать alias (замена ../ в начале адреса на @) для vite

В файл tsconfig.json или tsconfig.app.json добавить запись:
"paths": {
	"@/*": ["./src/*"]
}

В файл vite.config.json добавить запись:
resolve: {
	alias: [{ find: '@', replacement: '/src' }],
},
